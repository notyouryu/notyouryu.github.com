<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Principies of Communications</title>
    <url>/2022/04/05/Communications/</url>
    <content><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>从今天开始，准备对通信原理进行一次深度学习。——呜，实际上就是从头学一遍，学第一遍的时候总是感觉云里雾里的，hen烦。<br>从现在开始慢慢更新吧。<br><img src="/images/picture1.jpg" alt="派派牌翻白眼"></p>
<h2 id="1、写出香农公式，并说明信道容量C与B，S，n0之间的关系。"><a href="#1、写出香农公式，并说明信道容量C与B，S，n0之间的关系。" class="headerlink" title="1、写出香农公式，并说明信道容量C与B，S，n0之间的关系。"></a>1、写出香农公式，并说明信道容量C与B，S，n0之间的关系。</h2><p>•香农公式：&emsp; &emsp;Ct=Blog2(1+SN)=Blog2(1+Sn0B）单位：b/s 说明：S为信号平均功率（W）、N为噪声功率、N为带宽（Hz）、n0表示噪声单边功率谱密度（W/Hz）<br>•关系：<br>&emsp;&emsp;&emsp;&emsp;提高信噪比S/N，可增大信道容量C<br>&emsp;&emsp;&emsp;&emsp;C随着B的适当增大而增大，但当B→∞时，C→1.44Sn0<br>•通过B与S/N的互换，可以维持一定的C</p>
<span id="more"></span>
<h2 id="2、设二进制数字传输系统每隔0-4ms发送一个码元。"><a href="#2、设二进制数字传输系统每隔0-4ms发送一个码元。" class="headerlink" title="2、设二进制数字传输系统每隔0.4ms发送一个码元。"></a>2、设二进制数字传输系统每隔0.4ms发送一个码元。</h2><p>•（1）该系统信息速率；<br>&emsp;&emsp;∵TB=0.4ms=4×10−4(s)</p>
<p>&emsp;&emsp;∴RB=1TB=2.5×103(Baud)</p>
<p>&emsp;&emsp;∴Rb=RB×log2M=Rb×1=2500(b/s)<br>•（2）若改为十六进制信号码元，发送码元间隔不变，则系统的信息速率变为多少（设各码元独立等概出现）？<br>&emsp;&emsp;Rb=RB×log2M=RB×log216=RB×4=2500×4=104(b/s)</p>
<h2 id="3、对于同样以2400-b-s）信息速率发送的信号，若A系统传输（如2PSK方式）所需带宽为2400Hz，B系统传输（如4PSK方式）所需带宽为1200Hz，试问哪个系统更有效？"><a href="#3、对于同样以2400-b-s）信息速率发送的信号，若A系统传输（如2PSK方式）所需带宽为2400Hz，B系统传输（如4PSK方式）所需带宽为1200Hz，试问哪个系统更有效？" class="headerlink" title="3、对于同样以2400 (b/s）信息速率发送的信号，若A系统传输（如2PSK方式）所需带宽为2400Hz，B系统传输（如4PSK方式）所需带宽为1200Hz，试问哪个系统更有效？"></a>3、对于同样以2400 (b/s）信息速率发送的信号，若A系统传输（如2PSK方式）所需带宽为2400Hz，B系统传输（如4PSK方式）所需带宽为1200Hz，试问哪个系统更有效？</h2><p>&emsp;PSK：相移键控，即一种用载波相位表示输入信号信息的调制技术。<br>&emsp;*NPSK *：表示N进制的数字相位调制。<br>&emsp;&emsp;∵Rb=2400(b/s)</p>
<p>&emsp;&emsp;∴ηA=RbBA=24002400=1(b/(s⋅Hz))</p>
<p>&emsp;&emsp;∴ηB=RbBB=24001200=2(b/(s⋅Hz))</p>
<p>&emsp;&emsp;∴B系统更有效</p>
<h2 id="4、什么是调制？调制的目的？"><a href="#4、什么是调制？调制的目的？" class="headerlink" title="4、什么是调制？调制的目的？"></a>4、什么是调制？调制的目的？</h2><p>•调制：把信号形式转换成适合在信道中传输的一种过程。<br>•目的:<br>&emsp;1.把基带信号的频谱搬至较高的频率上，可以提高发射效率<br>&emsp;2.把多个基带信号分别搬移到不同的载频处，已实现信道的多路复用，提高信道利用率<br>&emsp;3.扩展信号带宽，提高系统抗干扰能力</p>
<h2 id="5、简述线性调制与非线性调制的区别。"><a href="#5、简述线性调制与非线性调制的区别。" class="headerlink" title="5、简述线性调制与非线性调制的区别。"></a>5、简述线性调制与非线性调制的区别。</h2><p>•线性调制：<br>&emsp;波形上：已调信号的幅度随基带信号的规律而呈正比地变化<br>&emsp;频谱结构上：已调信号的频谱完全是基带信号频谱在频域内的简单搬移<br>非线性调制：<br>&emsp;已调信号的载波都保持恒定不变，而频率和相位的变化都表现为载波瞬时相位的变化<br>•区别：<br>&emsp;非线性调制的额已调信号频谱不再是原调制信号频谱的线性搬移，而是频谱的非线性变换，会产生与频谱搬移不同的新的频率成分</p>
<h2 id="6、以框图方式简述AM、DSB、SSB、VDB调制信号产生及其解调过程，并以公式说明其调制后信号带宽、调制效率、信噪比及制度增益"><a href="#6、以框图方式简述AM、DSB、SSB、VDB调制信号产生及其解调过程，并以公式说明其调制后信号带宽、调制效率、信噪比及制度增益" class="headerlink" title="6、以框图方式简述AM、DSB、SSB、VDB调制信号产生及其解调过程，并以公式说明其调制后信号带宽、调制效率、信噪比及制度增益"></a>6、以框图方式简述AM、DSB、SSB、VDB调制信号产生及其解调过程，并以公式说明其调制后信号带宽、调制效率、信噪比及制度增益</h2><h1 id="6-1-AM-调幅：常规双边带调制"><a href="#6-1-AM-调幅：常规双边带调制" class="headerlink" title="6.1 AM 调幅：常规双边带调制"></a>6.1 AM 调幅：常规双边带调制</h1><p><img src="/images/come1.png" alt=" "><br>•产生过程：<br>假设调制信号m(t)的平均值为0，将其叠加一个直流偏量A0后与载波相乘，即可形成调幅信号<br>•解调过程：<br>当满足|m(t)|max⩽A0时，AM波的包络与调制信号m(t)的形状完全一样，此时用包络检波的方法很容易恢复出原始调制信号。<br>如果没有满足上述条件，可以使用其他的解调方法，例如相干解调<br>•时域表达式：sAM(t)=[A0+m(t)]cosωct=A0cosωct+m(t)cosωct 说明：A0为外加的直流分量；m(t)可以是确知信号也可以是随机信号<br>•若m(t)为确知信号，则AM信号的频谱为SAM(ω)=πA0[δ(ω−ωc)+δ(ω+ωc)]+12[M(ω+ωc)+M(ω−ωc)]，<br>•频谱图：由载频分量、上边带、下边带三部分组成；上边带的频谱结构与原调制信号的频谱结构相同，下边带是上边带的镜像。<br>AM信号是带有载波分量的双边带信号，它的带宽是基带信号带宽fH的2倍<br>•调制效率公式：ηAM=PsPAM=m2(t) A20+m2(t)¯说明：Pc=A20/2为载波功率，Ps=m2(t)/2为边带功率<br>当$|m(t)|{max}=A_0时，即100\eta{AM}=1/3$<br>•信噪比：(S0N0)AM=13(Sin0fm)<br>•制度增益：<br>大信噪比时：GAM=2m2(t)A20+m2(t)<br>当100%调制，且m(t)为单频正弦时候，GAM=23<br>小信噪比时候：门限效应</p>
<h2 id="7、写出PM、FM调制信号表达式，说明两者的区别与联系。"><a href="#7、写出PM、FM调制信号表达式，说明两者的区别与联系。" class="headerlink" title="7、写出PM、FM调制信号表达式，说明两者的区别与联系。"></a>7、写出PM、FM调制信号表达式，说明两者的区别与联系。</h2><p>•相位调制PM：<br>&emsp;&emsp;•定义：指瞬时相位偏移随调制信号m(t)做线性变化，即 ψ(t)=Kpm(t)<br>&emsp;&emsp;•公式：sPM(t)=Acos[ωc+Kpm(t)]<br>&emsp;&emsp;•说明：Kp为调相灵敏度(rad/V)，含义是单位调制信号幅度引起PM信号的相位偏移量<br>•频率调制FM：<br>&emsp;&emsp;•定义：指瞬时频率随偏移调制信号m(t)成正比例变化，即 dψ(t)dt=Kfm(t)<br>&emsp;&emsp;•公式：sFM(t)=Acos[ωct+Kf∫m(τ)dτ]<br>&emsp;&emsp;•说明：Kf为调频灵敏度(rad/(s·V))<br>&emsp;&emsp;•区别：PM是相位偏移随调制信号m(t)线性变化，FM是相位偏移随调制信号m(t)的积分呈线性变化</p>
<h2 id="8、设调制信号为单一频率的正弦波，写出FM调制信号表达式，及其调频指数、最大角频偏、最大角频偏的意义。"><a href="#8、设调制信号为单一频率的正弦波，写出FM调制信号表达式，及其调频指数、最大角频偏、最大角频偏的意义。" class="headerlink" title="8、设调制信号为单一频率的正弦波，写出FM调制信号表达式，及其调频指数、最大角频偏、最大角频偏的意义。"></a>8、设调制信号为单一频率的正弦波，写出FM调制信号表达式，及其调频指数、最大角频偏、最大角频偏的意义。</h2><p>•FM调制信号表达式：sFM(t)=Acos[ωct+KfAm∫cosωmτdτ]=Acos[ωct+mfsinωmt]<br>•调频指数：mf=KfAmωm=Δωωm=Δffm表示最大的相位偏移<br>•最大角频偏：Δω=KfAm<br>•最大频偏：Δf=mf⋅fm</p>
<h2 id="9、什么是信噪比增益？信噪比增益高说明什么问题？说明宽带调频系统信噪比增益与调频指数的关系，解释门限效应。"><a href="#9、什么是信噪比增益？信噪比增益高说明什么问题？说明宽带调频系统信噪比增益与调频指数的关系，解释门限效应。" class="headerlink" title="9、什么是信噪比增益？信噪比增益高说明什么问题？说明宽带调频系统信噪比增益与调频指数的关系，解释门限效应。"></a>9、什么是信噪比增益？信噪比增益高说明什么问题？说明宽带调频系统信噪比增益与调频指数的关系，解释门限效应。</h2><p>•信噪比增益：输入信噪比和输出信噪比的比值<br>•信噪比增益高：说明抗噪声性能好<br>•关系：<br>&emsp;&emsp;调频指数：mf=Δf/fm 说明：Δf表示最大频偏，fm表示调制信号频率<br>&emsp;&emsp;当mf≪1时;BFM≈2fm<br>&emsp;&emsp;当mf≫1时;BFM≈2Δf<br>•门限效应：当Si/Ni低于一定数值时候，解调器的输出信噪比S0/N0急剧恶化，这种现象称为调频信号解调的门限效应。</p>
<h2 id="10、写出10001-001-000-01-000-011-0-00-011的AMI-码-、HDB3码、双相码和CMI码。"><a href="#10、写出10001-001-000-01-000-011-0-00-011的AMI-码-、HDB3码、双相码和CMI码。" class="headerlink" title="10、写出10001 001 000 01 000 011 0 00 011的AMI 码 、HDB3码、双相码和CMI码。"></a>10、写出10001 001 000 01 000 011 0 00 011的AMI 码 、HDB3码、双相码和CMI码。</h2><p>源码：10001 001 000 01 000 011 0 00 011<br>•AMI码：-1000+1 00-1 000 0+1 000 0-1+1 0 00 0-1+1<br>•HDB3码：-1000+1 00-1 000-V +1 000+V -1+1 -B00-V -1+1<br>•双相码：1001010110 010110 010101 0110 010101 011010 01 0101 011010<br>•CMI码：1101010100 010111 010101 0100 010101 011100 01 0101 011100</p>
<h2 id="11、什么是奈奎斯特带宽？什么是频带利用率？写出具有理想低通特性的基带传输系统H-w-的带宽和频带利用率。"><a href="#11、什么是奈奎斯特带宽？什么是频带利用率？写出具有理想低通特性的基带传输系统H-w-的带宽和频带利用率。" class="headerlink" title="11、什么是奈奎斯特带宽？什么是频带利用率？写出具有理想低通特性的基带传输系统H(w)的带宽和频带利用率。"></a>11、什么是奈奎斯特带宽？什么是频带利用率？写出具有理想低通特性的基带传输系统H(w)的带宽和频带利用率。</h2><p>•奈奎特斯带宽：通常，把理想低通传输特性的带宽(1/2TB)称为奈奎斯特带宽，记为fN<br>•频带利用率：<br>&emsp;&emsp;单位带宽内的传输速率，即η=RBB或ηb=RbB<br>&emsp;&emsp;H(ω)={TB0|ω|⩽πTB|ω|&gt;πTB<br>•频带利用率：η=RBB=2 单位(Baud/Hz)</p>
<h2 id="12、在不考虑ISI条件下，二进制双极性基带系统在等概情况下的最佳判决门限电平是？"><a href="#12、在不考虑ISI条件下，二进制双极性基带系统在等概情况下的最佳判决门限电平是？" class="headerlink" title="12、在不考虑ISI条件下，二进制双极性基带系统在等概情况下的最佳判决门限电平是？"></a>12、在不考虑ISI条件下，二进制双极性基带系统在等概情况下的最佳判决门限电平是？</h2><p>•最佳判决门限电平：在A和σ2n一定条件下，可以找到一个使误码率最小的判决门限电平，称为最佳门限电平。<br>•等概情况下的最佳判决门限电平是:V∗D=0</p>
<h2 id="13、什么是奈奎斯特带宽？说明奈奎斯特第一准则：抽样点无失真传输的充要条件。"><a href="#13、什么是奈奎斯特带宽？说明奈奎斯特第一准则：抽样点无失真传输的充要条件。" class="headerlink" title="13、什么是奈奎斯特带宽？说明奈奎斯特第一准则：抽样点无失真传输的充要条件。"></a>13、什么是奈奎斯特带宽？说明奈奎斯特第一准则：抽样点无失真传输的充要条件。</h2><p>•奈奎斯特带宽：无失真传输码元周期为T的抽样序列时，所需要的最小传输频带宽度为0-1/2T。1/2T称为奈奎斯特带宽。</p>
<p>•奈奎斯特第一准则：抽样点无失真传输的充要条件是：在本码元的抽样时刻上有最大值，其他码元的抽样时刻信号值为零，即抽样点上无码间串扰。</p>
<h2 id="14、数字基带信号的功率谱有什么特点？它的带宽主要取决于什么？定时信号由哪部分决定？"><a href="#14、数字基带信号的功率谱有什么特点？它的带宽主要取决于什么？定时信号由哪部分决定？" class="headerlink" title="14、数字基带信号的功率谱有什么特点？它的带宽主要取决于什么？定时信号由哪部分决定？"></a>14、数字基带信号的功率谱有什么特点？它的带宽主要取决于什么？定时信号由哪部分决定？</h2><p>•数字基带信号的功率谱特点：数字基带信号s(t)的功率谱密度Ps(w)通常包括两部分:由交变波形成的边续谱Pu(W)及由稳态波形成的离散谱Pv(W)。其中连续谱总是存在的，而离散谱在某些特殊情况下不存在或某些离散谱分量不存在;<br>•数字基带信号的带宽主要取决于连续谱<br>•数字基带信号的定时信号由离散谱决定<br> ——————————-<em><strong>更新于2022/4/13 2:11</strong></em></p>
]]></content>
      <categories>
        <category>通信原理</category>
      </categories>
      <tags>
        <tag>电子信息</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建此博客的心得体会</title>
    <url>/2022/04/03/Opioion/</url>
    <content><![CDATA[<h2 id="一、框架"><a href="#一、框架" class="headerlink" title="一、框架"></a>一、框架</h2><p>使用的是 <a href="https://hexo.io/">Hexo</a>框架。Hexo是一个快速、简洁且高效的博客框架。<br>特点：<br>•速度快<br>•可以一键部署<br>•插件和可拓展性<br>•支持MarkDown</p>
<h2 id="二、安装配件并设置环境变量"><a href="#二、安装配件并设置环境变量" class="headerlink" title="二、安装配件并设置环境变量"></a>二、安装配件并设置环境变量</h2><p>依次安装<a href="https://git-scm.com/">git</a>、<a href="http://nodejs.cn/">nodejs</a>。<br>设置环境变量可以参考我的<a href="https://blog.csdn.net/apple_54125764/article/details/123919700?spm=1001.2014.3001.5501">CSDN</a>。</p>
<span id="more"></span>

<h2 id="三、购买域名"><a href="#三、购买域名" class="headerlink" title="三、购买域名"></a>三、购买域名</h2><p>域名购买起来其实挺简单的，我选择的是外网:<a href="https://namesilo-china.com/">namesilo</a>。在这里踩了坑，不建议选择外网！外网便宜但是最后双向绑定到Hithub的时候会巨慢，内贵、需要公安备案、但是相应速度很快。这里需要注意有的是首年便宜后续特贵，一定要看清楚了。还是比较推荐<a href="https://cn.aliyun.com/">阿里云</a>滴！</p>
<h2 id="四、域名与Hithub绑定"><a href="#四、域名与Hithub绑定" class="headerlink" title="四、域名与Hithub绑定"></a>四、域名与Hithub绑定</h2><p>在这里踩了巨量的坑，跟着很多文章走下来都没有结果。随后自己摸爬滚打＋求助各路神仙，慢慢绑定成功了。<br>1、首先进入<a href="https://github.com/">Hitub</a>界面，注册账号。点击右上角的+，创建一个New repository，选择 public。<br>github项目创建完成，点击     “Continue to layouts”，点击发布个人网站，我们的初始网站就建好了，不过这只是一个github.io结尾的。<br>2、安装Hexo，打开git bash 输入以下命令：<br>•npm install hexo-cli -g<br>•hexo init blog<br>•cd blog<br>•npm install<br>•hexo server<br>随后会出来一个<a href="http://localhost:4000/">本地连接</a>,复制到浏览器里我们的本地网站就部署好了，这里有很多<a href="https://hexo.io/themes/">theme</a>，但是大众化的太多了，我选择的是简约清爽的<a href="https://github.com/Shen-Yu/hexo-theme-ayer">ayer</a>。也可以自己写，当然前提是会css。js的话。<br>3、部署代码到Hithub page<br>•首先要生产SSH密钥，这里还是参考<a href="https://blog.csdn.net/apple_54125764/article/details/123919700?spm=1001.2014.3001.5501">CSDN</a>.<br>•接下来就是将本地的静态博客部署到gitHub上，要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件。<br>可以实现如下命令：<br>• npm install hexo -server –save<br>• npm install hexo-deployer-git –save<br>•编辑全局 hexo 的配置文件：_config.yml.编辑全局配置后我们需要重新部署：<br>• hexo clean       #先清除掉已经生成的旧文件<br>• hexo generate    #再生成一次静态文件<br>_ hexo server      #进行本地预览，本地预览没问题的情况下，按下ctrl+c取消预览<br>• hexo deploy      #开始部署到Hithub<br>•访问服务器地址来检查是否部署成功（服务器地址是你的hithub建立的项目地址）。</p>
<p>小结：以后每次发布新文章都要按照步骤来：<br>•hexo clean<br>•hexo generate<br>•hexo deploy<br>4、github pages绑定域名<br> •<a href="ttps://blog.csdn.net/m0_37812513/article/details/78775629?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164899466416780271586113%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164899466416780271586113&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-78775629.142^v5^pc_search_quality_down,157^v4^control&utm_term=域名解析&spm=1018.2226.3001.4187">域名解析额</a>&amp;<a href="https://blog.csdn.net/qq_23547831/article/details/50966172?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164899473916782246478080%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164899473916782246478080&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-50966172.142%5Ev5%5Epc_search_quality_down,157%5Ev4%5Econtrol&utm_term=github%E8%A7%A3%E6%9E%90&spm=1018.2226.3001.4187">Github解析</a>,这里就不过多叙述了，多看看文章慢慢踩坑。<br>    踩过的坑：域名解析是需要一个A类，一个CNAME的。A类倒不重要，CANME是最为关键的，TTL设置为3600，也就是1 hour.</p>
<h2 id="五、主题选择"><a href="#五、主题选择" class="headerlink" title="五、主题选择"></a>五、主题选择</h2><p>我选择了Ayer，看中了它的简约风。修改.yml文件，替换背景image图片，替换logo。图片可以用jpg也可以用npg文件。这里注意：背景图片最好选用偏深色系的image，不然后期博客title会看不见，hexo没有给相关调色代码，所以title目前只能是白色。这里要十分感谢几位朋友帮我找logo，背景图，帮我调试的（zcn，cy，hx，ksy）。zcn的微博在本页最下方哦！</p>
<h2 id="六、常见问题"><a href="#六、常见问题" class="headerlink" title="六、常见问题"></a>六、常见问题</h2><p>•域名绑定失败<br>解决办法：首先观察SSH密钥绑定是否成功，然后去Hithub页面查看save是否成功，<a href="ttps://blog.csdn.net/m0_37812513/article/details/78775629?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164899466416780271586113%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164899466416780271586113&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-78775629.142^v5^pc_search_quality_down,157^v4^control&utm_term=域名解析&spm=1018.2226.3001.4187">域名解析额</a>是否正确。<br>• hexo g 失败<br>解决方法:title: hexo 注意冒号后面要加空格.<br>• hexo d 失败<br>解决方法：获取SSH密钥然后 输入自己注册Hithub时的用户名和邮箱.<br>每次修改完成后 按下Ctrl +shift+p 随后输入命令 npm run bulid 和npm run deploy每次deploy完后去hithub中都会有记录 .<br>• 404 not found<br> 解决办法：GitHub中的https上打勾.</p>
<h2 id="七、待办事项"><a href="#七、待办事项" class="headerlink" title="七、待办事项"></a>七、待办事项</h2><p>1 尝试改善一下mathjax渲染.<br>2 添加新的网易云音乐到改界面中.<br>3 修改页面最下方内容 去footer.ejs中找相应解决办法.<br>4 package.json中有相应脚本点一下就可以执行了.<br>5 拓展左侧栏分类 标签的应用.<br>6 学习md语法<br>notyouryu<br>2022/4/3/23:29<br>___________________________________________  #这是一条分割线</p>
<p>更新于2022/4/4 </p>
<hr>
<p>半角空格：” &amp; e m s p;”<br>2022/4/8 2:42</p>
]]></content>
      <categories>
        <category>技术总结</category>
      </categories>
      <tags>
        <tag>hexo&amp;Hithub</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World- md语言</title>
    <url>/2022/04/02/Hello-world/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>


<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>inPrivate :  ctrl+shift+N</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>开发语言</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Git、Nodejs的安装及环境适配</title>
    <url>/2022/04/05/git/</url>
    <content><![CDATA[<h2 id="一、GIT的下载。"><a href="#一、GIT的下载。" class="headerlink" title="一、GIT的下载。"></a>一、GIT的下载。</h2><p>•我下载的是windows版本的，如果是mac或者linux官网都有下载链接的。一般推荐下载最新版本的也就是64-bit版本的。<br>如果ruby版本跟不上的话还是推荐下载32bit。</p>
<span id="more"></span>

<p>•百度搜索<a href="https://git-scm.com/download/win">git</a>官网。</p>
<h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><p>双击下载好的set up程序<br><img src="/images/picture2.png" alt="P1.1"><br>一直点击next，默认勾选就好，如果后期想要方便打开git bash的话就勾选第一个添加到桌面图标就成。   ps：最后两栏是勾选后会实时更新提示之类的，推荐不勾选。后续一直点击NEXT就ok</p>
<h3 id="三、检查是否安装完成"><a href="#三、检查是否安装完成" class="headerlink" title="三、检查是否安装完成"></a>三、检查是否安装完成</h3><p>按下WIN+R，在弹出的窗口中输入cmd，输入where git（可以获取git的安装路径）&amp;git，回车。出现以下界面那么恭喜你！安装成功噜！<br><img src="/images/picture3.png" alt="P1.2"></p>
<h3 id="四、开发环境配置"><a href="#四、开发环境配置" class="headerlink" title="四、开发环境配置"></a>四、开发环境配置</h3><p>• 注册<a href="https://github.com/">Github</a>账号.<br>注册成功后后，点击git bash（找不到的小朋友去刚刚安装好的目录里面去找到它），下面就开始用账号进行环境配置。<br>• 配置用户名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$git</span> config --global user.name<span class="string">&quot;username&quot;</span>      //  <span class="string">&quot;username&quot;</span>是注册时候的账户名</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$git</span> config --global user.email“username@email.com<span class="string">&quot;  //&quot;</span>username@email.com <span class="string">&quot;是注册用的邮箱</span></span><br></pre></td></tr></table></figure>
<p>•检查时候配置成功<br>执行上述命令后输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global --list 检查是否配置成功</span><br></pre></td></tr></table></figure>

<h3 id="五、生成SSH公钥"><a href="#五、生成SSH公钥" class="headerlink" title="五、生成SSH公钥"></a>五、生成SSH公钥</h3><p>在刚刚的git bash 框内输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ssh</span> -keygen -t rsa </span><br></pre></td></tr></table></figure>
<p>回车回车再回车结果如下：<br><img src="/images/picture4.png" alt="P1.3"><br>得到了公钥的 randomart image 形式。随后去git bash 中显示的文件路径中找到生产的ssh文件 .<br>原则上是只会出现这两个滴！但是文件密钥一般有三个（后面解释）<br>用记事本打开id_rsa文件然后copy下来去到 刚刚的<a href="https://github.com/">Github</a>官网找到setting设置。<br>点击左边的SSH  keys ，继续点击New SSH key。把刚刚copy的id_rsa文件粘贴到第二栏，title随便填就好了。随后会收到邮件，这步完成之后就只差最后一步了。<br>•测试配置是否成功<br>进入git bash 命令框输入命令：</p>
<p>$ ssh -T </p>
<p>输入yes后回车<br>最后弹出successful就说明成功了。</p>
<p>常见问题<br>•关于安装路径问题：<br>俺下载了六七次set up 界面给我的显示是从未出现过路径的browse选项，这让我很头秃！<br>因为后续进行 git bash操作的时候会使用到 git 的安装路径！所以我选择卸载后重装，发现还是会选择默认的安装路径进行安装。。。没有办法.（有大佬指教吗）</p>
]]></content>
      <categories>
        <category>软件方面</category>
      </categories>
      <tags>
        <tag>git&amp;nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>关于sakura动态特效</title>
    <url>/2022/04/07/sakura/</url>
    <content><![CDATA[<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>var stop, staticx;<br>var img = new Image();<br>img.src = “data:image/png;base64;<br>function Sakura(x, y, s, r, fn) {<br>    <span id="more"></span><br>    this.x = x;<br>    this.y = y;<br>    this.s = s;<br>    this.r = r;<br>    this.fn = fn;<br>}</p>
<p>Sakura.prototype.draw = function (cxt) {<br>    cxt.save();<br>    var xc = 40 * this.s / 4;<br>    cxt.translate(this.x, this.y);<br>    cxt.rotate(this.r);<br>    cxt.drawImage(img, 0, 0, 40 * this.s, 40 * this.s)<br>    cxt.restore();<br>}<br>Sakura.prototype.update = function () {<br>    this.x = this.fn.x(this.x, this.y);<br>    this.y = this.fn.y(this.y, this.y);<br>    this.r = this.fn.r(this.r);<br>    if (this.x &gt; window.innerWidth || this.x &lt; 0 || this.y &gt; window.innerHeight || this.y &lt; 0) {<br>        this.r = getRandom(‘fnr’);<br>        if (Math.random() &gt; 0.4) {<br>            this.x = getRandom(‘x’);<br>            this.y = 0;<br>            this.s = getRandom(‘s’);<br>            this.r = getRandom(‘r’);<br>        } else {<br>            this.x = window.innerWidth;<br>            this.y = getRandom(‘y’);<br>            this.s = getRandom(‘s’);<br>            this.r = getRandom(‘r’);<br>        }<br>    }<br>}<br>SakuraList = function () {<br>    this.list = [];<br>}<br>SakuraList.prototype.push = function (sakura) {<br>    this.list.push(sakura);<br>}<br>SakuraList.prototype.update = function () {<br>    for (var i = 0, len = this.list.length; i &lt; len; i++) {<br>        this.list[i].update();<br>    }<br>}<br>SakuraList.prototype.draw = function (cxt) {<br>    for (var i = 0, len = this.list.length; i &lt; len; i++) {<br>        this.list[i].draw(cxt);<br>    }<br>}<br>SakuraList.prototype.get = function (i) {<br>    return this.list[i];<br>}<br>SakuraList.prototype.size = function () {<br>    return this.list.length;<br>}</p>
<p>function getRandom(option) {<br>    var ret, random;<br>    switch (option) {<br>        case ‘x’:<br>            ret = Math.random() * window.innerWidth;<br>            break;<br>        case ‘y’:<br>            ret = Math.random() * window.innerHeight;<br>            break;<br>        case ‘s’:<br>            ret = Math.random();<br>            break;<br>        case ‘r’:<br>            ret = Math.random() * 6;<br>            break;<br>        case ‘fnx’:<br>            random = -0.5 + Math.random() * 1;<br>            ret = function (x, y) {<br>                return x + 0.5 * random - 1.7;<br>            };<br>            break;<br>        case ‘fny’:<br>            random = 1.5 + Math.random() * 0.7<br>            ret = function (x, y) {<br>                return y + random;<br>            };<br>            break;<br>        case ‘fnr’:<br>            random = Math.random() * 0.03;<br>            ret = function (r) {<br>                return r + random;<br>            };<br>            break;<br>    }<br>    return ret;<br>}</p>
<p>function startSakura() {<br>    requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;<br>    var canvas = document.createElement(‘canvas’),<br>        cxt;<br>    staticx = true;<br>    canvas.height = window.innerHeight;<br>    canvas.width = window.innerWidth;<br>    canvas.setAttribute(‘style’, ‘position: fixed;left: 0;top: 0;pointer-events: none;’);<br>    canvas.setAttribute(‘id’, ‘canvas_sakura’);<br>    document.getElementsByTagName(‘body’)[0].appendChild(canvas);<br>    cxt = canvas.getContext(‘2d’);<br>    var sakuraList = new SakuraList();<br>    for (var i = 0; i &lt; 50; i++) {<br>        var sakura, randomX, randomY, randomS, randomR, randomFnx, randomFny;<br>        randomX = getRandom(‘x’);<br>        randomY = getRandom(‘y’);<br>        randomR = getRandom(‘r’);<br>        randomS = getRandom(‘s’);<br>        randomFnx = getRandom(‘fnx’);<br>        randomFny = getRandom(‘fny’);<br>        randomFnR = getRandom(‘fnr’);<br>        sakura = new Sakura(randomX, randomY, randomS, randomR, {<br>            x: randomFnx,<br>            y: randomFny,<br>            r: randomFnR<br>        });<br>        sakura.draw(cxt);<br>        sakuraList.push(sakura);<br>    }<br>    stop = requestAnimationFrame(function () {<br>        cxt.clearRect(0, 0, canvas.width, canvas.height);<br>        sakuraList.update();<br>        sakuraList.draw(cxt);<br>        stop = requestAnimationFrame(arguments.callee);<br>    })<br>}<br>window.onresize = function () {<br>    var canvasSnow = document.getElementById(‘canvas_snow’);<br>}<br>img.onload = function () {<br>    startSakura();<br>}</p>
<p>function stopp() {<br>    if (staticx) {<br>        var child = document.getElementById(“canvas_sakura”);<br>        child.parentNode.removeChild(child);<br>        window.cancelAnimationFrame(stop);<br>        staticx = false;<br>    } else {<br>        startSakura();<br>    }<br>}</p>
]]></content>
      <categories>
        <category>技术总结</category>
      </categories>
      <tags>
        <tag>特效</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown从入门到入坑</title>
    <url>/2022/04/13/markdown/</url>
    <content><![CDATA[<p><img src="/images/come2.png"></p>
<h2 id="序言："><a href="#序言：" class="headerlink" title="序言："></a>序言：</h2><p><em><strong>你说的那个markdown，它厉害吗？</strong></em><br>它不是厉不厉害的问题，它真的是那种……那种用起来很舒服的那种。它的语法特别简单，功能超级多，支持H5标签，很强大.</p>
<h2 id="什么是markdown？"><a href="#什么是markdown？" class="headerlink" title="什么是markdown？"></a><em><strong>什么是markdown？</strong></em></h2><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>
<span id="more"></span>

<h2 id="markdown学习"><a href="#markdown学习" class="headerlink" title="markdown学习"></a><em><strong>markdown学习</strong></em></h2><p>对于markdown呢，我个人觉得可以分为三个阶段。当然，我自己也只是停留在第二个阶段，第三个阶段的功能只是需要的时候才去百度。</p>
<p>当然，工欲善其事，必先利其器。我们在学习markdown的时候，同时也需要一个超强力的编辑器Typora，这篇文章就是使用这个工具编辑的markdown文章。如果不想下载编辑器的小伙伴也不慌，我们依然可以在简书、CSDN等网站上申请个账号然后去编写自己的markdown文章。</p>
<p>是不是没想到，我们经常看的简书、csdn竟然大部分都是用markdown写的。</p>
<p>最近我还看到腾讯文档也支持markdown语法了，足以证明其之强大。</p>
<h2 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h2><p>这第一阶段呢，适用于一般大众，仅仅会一些简单的基础语法就可以了。</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>大家知道word里面分一二三级标题，同理，markdown在写文章的时候也分为一共6级标题。而在markdown里面，不需要像word那么麻烦设置标题等级。<br>一级标题：在段落前添加一个 # 和一个空格，然后后面接一级标题内容。例 # 一级标题<br>二级标题：在段落前添加两个 # 和一个空格，然后后面接二级标题内容。例 ## 二级标题<br>三四五六级标题同理，一般用到6级就够了<br>快捷键：标题<br>当然，在一般的markdown编辑器里，都是支持快捷键的，设置n级标题的快捷键为：Ctrl + 数字n（这里注意不是小键盘）。</p>
<h2 id="加粗、倾斜"><a href="#加粗、倾斜" class="headerlink" title="加粗、倾斜"></a>加粗、倾斜</h2><p>在word里面，我们经常使用字体加粗和倾斜来对某些文字进行重点标记。markdown里面字体加粗和倾斜也是超级简单的，话不多说，直接上教程：</p>
<p>加粗：在需要加粗的句子前后或词语前后分别添加<strong>，例：</strong>加粗<strong>会被解析为加粗<br>倾斜：在需要倾斜的句子前后或词语前后分别添加<em>，例：</em>倾斜<em>会被解析为倾斜<br>加粗且倾斜：emmm，就是三个</em>，例：*</strong>加粗且倾斜***会被解析为加粗且倾斜<br>快捷键：加粗、倾斜<br>加粗为Ctrl + B</p>
<p>倾斜为Ctrl + I。</p>
<h2 id="链接、图片"><a href="#链接、图片" class="headerlink" title="链接、图片"></a>链接、图片</h2><p>们写个人博客的时候，很多时候都会添加一些链接、图片。markdown添加链接和图片的语法很相似，所以我把他们放到了一起：</p>
<p>链接：语法规则为<a href="%E7%BD%91%E5%9D%80%E9%93%BE%E6%8E%A5">网页描述</a>，例：<a href="https://www.notyouryu.com/">notyouryu’s blog</a></p>
<p>图片的语法规则只是在链接的前面添加一个!，所以我说他们很相似。</p>
<p>这里注意，链接可以为本地的链接，甚至可以是相对链接。</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>添加列表也是一个必不可少的功能，其中列表包括：有序列表、无序列表，下面是他们的语法</p>
<p>有序列表：在组成有序列表的前面添加序号.即可，例：</p>
<ol>
<li>有序列表1</li>
<li>有序列表2</li>
</ol>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>这个引用虽然我自己好像没有怎么正儿八经用，但是偶需要的人肯定会用到。这里还是简单说一下。</p>
<p>引用语法：在要引用的行前添加&gt;即可，例如：</p>
<blockquote>
<p>这是引用的文字<br>引用内可以嵌套标题、列表等</p>
</blockquote>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">| Item      |    Value | Qty  |</span><br><span class="line">| :-------- | --------:| :--: |</span><br><span class="line">| Computer  | 1600 USD |  5   |</span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<p> 上面是一个最简单的表格的例子，会被解析为：<br> | Item      |    Value | Qty  |<br>| :——– | ——–:| :–: |<br>| Computer  | 1600 USD |  5   |<br>最简单的表格代码都需要三行，其中第一行是标题行，第二行表示文字对齐方向，然后第三行及以后才是数据。</p>
<p>表格每一列均以|隔开，每一行均以换行符隔开。</p>
<p>第二行表示的文字对齐方向规则如下：</p>
<p>左对齐：只有左侧有一个冒号，后面接N个-，N&gt;1</p>
<p>右对齐：只有右侧有一个冒号，前面接N个-，N&gt;1</p>
<p>居中对齐：左侧右侧同时有一个冒号，中间接N个-，N&gt;1</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码这个一般也就程序员来用吧，当然，代码这个东西后面还可以玩出更新鲜的花样，markdown的高级使用有一方面就是在代码里面的使用。</p>
<p>代码分为行内代码和代码区块，分别介绍</p>
<p>行内代码：把行内代码用`包围起来，注意这个符号是英文输入法下的键盘上tab键上面、数字1左面的那个符号。</p>
<p>代码区块：把代码块用三个<code>包围起来. 代码块注意一下，三个</code>以后接的是编程语言类型，一般常用的都支持，甚至还会有语法高亮。</p>
]]></content>
      <categories>
        <category>开发语言</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>人间干饭实录</title>
    <url>/2022/04/13/eats/</url>
    <content><![CDATA[<h2 id="4-13-晚餐"><a href="#4-13-晚餐" class="headerlink" title="4/13 晚餐"></a>4/13 晚餐</h2><p><img src="/images/c1.png"></p>
<p><em><strong>晚上和朋友来银泰恰饭，上了这么一道菜。看这分量，看这价格。。。。我的评价是下次不一定。性价比不高，口感偏甜。应该是猪肉吧，不腻，吃起来很烂很下饭，酱汁包在肉的表面，很入味好吧。不但有红烧肉的鲜香味，还有荔枝肉的酸甜口。喜欢吃甜的朋友一定得来试一试！</strong></em><br>买的了吃亏！买的了上当！</p>
<span id="more"></span>


<h2 id="4-12-午餐"><a href="#4-12-午餐" class="headerlink" title="4/12 午餐"></a>4/12 午餐</h2><p><img src="/images/c2.png"></p>
<p><em><strong>好久好久没ci坑德基啦，今天中午决定吃十翅一桶！香辣鸡翅还是那味！辣度刚刚好，外表酥脆里面嫩嫩！奥尔良烤翅还是一如既往的好吃，就是单吃有点咸</strong></em><br><em><strong>翅桶yyds好吧!</strong></em></p>
<h2 id="3-16-夜宵"><a href="#3-16-夜宵" class="headerlink" title="3/16 夜宵"></a>3/16 夜宵</h2><p><img src="/images/c3.png"></p>
<p><em><strong>晚上在外面hang out 好久，突然看见一家麦当劳。又想着自己好像确实有段时日没吃M了，就走了进来。。。强制欺骗自己，偶尔吃吃 8 会长胖！点了一个双层安格斯和牛芝士堡一份巴适火锅炸鸡和两块麦麦脆汁鸡。</strong></em></p>
<blockquote>
<p>双层安格斯和牛芝士堡：很大很撑肚子。牛肉给的很多很厚实，牛肉味十足，一般来说完全可以用来当晚餐<br>巴适火锅炸鸡：我实在想不明白为啥这玩意儿能上麦当劳新品的啊，说是融合了川味元素。就en把火锅往炸鸡上贴，个人觉得味道不行，没有火锅味，炸的很干，吃起来很柴，不推荐！<br>两份麦麦脆汁鸡：我点的一份鸡胸，一份鸡腿。鸡胸确实感觉没有入味，但也是好吃的。说句实话个人推荐买鸡腿，感觉鸡腿味道会比鸡胸好些！</p>
</blockquote>
<h2 id="3-16晚饭"><a href="#3-16晚饭" class="headerlink" title="3/16晚饭"></a>3/16晚饭</h2><p><img src="/images/c4.png"><br><em><strong>想找酒吧喝酒转半小时还是来吃面了。</strong></em><br><em><strong>老板很热心 牛肉给的很大块！</strong></em><br><em><strong>还给俺多煮了一碗面[大哭]</strong></em></p>
<blockquote>
<p>面的口感像是咸水面 但是又有拉面的劲道感<br>牛肉很噻牙，不柴！把面粘着牛肉酱一口牛肉一口面，真的牛好吃的好不！</p>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杀猪饲料</tag>
      </tags>
  </entry>
  <entry>
    <title>吃点好的</title>
    <url>/2022/04/14/eats2/</url>
    <content><![CDATA[<h2 id="Steak-House"><a href="#Steak-House" class="headerlink" title="Steak House"></a>Steak House</h2><h1 id="4-14"><a href="#4-14" class="headerlink" title="4/14"></a>4/14</h1><span id="more"></span>
<p><img src="/images/e1.jpg"></p>
<blockquote>
<p>椰香南瓜汤<br>吃牛排前先来一碗金灿灿暖心暖胃的南瓜汤<br>清晰的椰奶味＋绵密的南瓜香甜味混合<br>口感浓郁丝滑，超好喝！</p>
</blockquote>
<p><img src="/images/e2.jpg"><br><img src="/images/e4.jpg"></p>
<blockquote>
<p>果木炙烤安格斯180天谷饲眼肉<br>我选的是七分熟，肥嫩相间，鲜香四溢，油脂丰富，牛肉分量很足!<br>吃到一半就有很明显的饱腹感了！</p>
</blockquote>
<p><img src="/images/e3.jpg"></p>
<p><img src="/images/e5.jpg"><br><img src="/images/e6.jpg"><br><img src="/images/e7.jpg"><br><img src="/images/e8.jpg"><br><img src="/images/e9.jpg"></p>
<blockquote>
<p>总体评价： 约会可以来，和hxd来木有必要！</p>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杀猪饲料</tag>
      </tags>
  </entry>
  <entry>
    <title>2022/4/15 0:20</title>
    <url>/2022/04/14/note/</url>
    <content><![CDATA[<h2 id="深夜开e"><a href="#深夜开e" class="headerlink" title="深夜开e"></a>深夜开e</h2><p><em><strong>今晚坐在电脑面前，想着该不该开开电脑更新点什么，但是最近很忙确实也没有什么东西可以记录，想想还是写点日记记录一下。</strong></em></p>
<span id="more"></span>
<p><em><strong>其实我一到晚上就会开e的坏习惯最早可以追溯到高一，自从跨入了高中之后因为一中的接近全封闭式的教学模式让我很憋屈。每天下晚自习之后我都会照常骑着单车回家，不同的是 我会选择最远的那一条。因为在这条路上我可以体会到我所生活的小镇的夜晚十点的安逸，到了家后我会先躺在沙发上闭着眼睛想想 今天我做了什么，那些方面（沟通、交流、学习等）。</strong></em><br><em><strong>举个例子：今天和喜欢的女孩说话，两人说完最后一句话之后她也就没回我了，我会想是不是我说错什么了，我当时是不是不该这么说，我当时为啥这样啊，如果说说些别的会不会不一样</strong></em><br><em><strong>所以说因为这种想法，每天定时都会让自己开e，听的歌也e。那更是e上加e，最近有个朋友突然vx我说好像从我认识你开始你都会定时开e，别e了，别听爱情废柴了，给你推荐jay chou的超人不会飞。当时的我还在田径场上跑步，能看见这么一段话很暖，也让我支楞了一下。好像确实我定时都会抑郁，只是最近一年e的频率太高了，我决定从今天开始改掉这个坏毛病</strong></em></p>
<p><em><strong>今天下午第一次尝试着泡点茶包，是一个好朋友从外地寄给我的茶颜悦色，学习的时候带着耳机放点周杰伦。</strong></em><br><em><strong>初春时节，满园春色如许。但又恰逢疫情，很多景点又不对外开放。看见朋友圈有不少朋友在晒照片，分享结伴出游的逸趣。相比于秋冬的 缓缓枫叶还是漫天飞雪，春夏的万物生长和鸟语花香倒更是我向往的轨迹，好久没有过好一个春天了，下午吹着海风喝着茶打着游戏悠哉游哉于我而言真是难得的幸事。</strong></em><br>当然，要是没有蚊子就太好了，我真的是快要被咬麻了，祖国花朵的新鲜血液是要义务献血的，不愿再哭。<br><em><strong>最近也有去看一些推文。现代人的很多时间已经被手机剥夺，似乎工作之余的碎片时间只能用这种方式来被动地接受一些讯息。我也试着远离手机，将注意力放到手头工作、纸质书本、身边世界中去。时不时 check 手机虽然已经成为了一种强迫症，不过看到微信没有小红点就会轻松很多，起码这段时间是可以由自己完全支配的。</strong></em></p>
<p><em><strong>蛮久之前就注意到自己的语言表达能力和文字表达能力下降很快，可能是由于没有什么学校课程要上，接触到语言文学类的信息越来越少，而被专业特定的、领域相关的、杂乱碎片化的讯息湍流给淹没了。不去主动思考一些问题，而去被动接受信息，甚至不加判别；也没有一些可以肆无忌惮地随时随地地分享任何事情的朋友，真的是精神层面的一种摧残。</strong></em></p>
<blockquote>
<p>最后我有两周没有写过周记了，本周日将会继续更新周记，周任务。<br>还有就是我很想买些新衣服，小红书上搜了好多，还是会选择少年感方面的穿搭</p>
</blockquote>
]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>沟通技巧</title>
    <url>/2022/04/15/title/</url>
    <content><![CDATA[<h2 id="一、先讲结论"><a href="#一、先讲结论" class="headerlink" title="一、先讲结论"></a>一、先讲结论</h2><h1 id="使用-PREP-模式"><a href="#使用-PREP-模式" class="headerlink" title="使用 PREP 模式"></a>使用 PREP 模式</h1><ol>
<li>Point 结论</li>
<li>Reason 依据</li>
<li>Example 具体事例</li>
<li>Point 重申结论后结束</li>
</ol>
<p>进行演讲、交流、汇报、会议都需要采用这种方法。沟通时不必立即做出回答，可以思考几分钟。</p>
<span id="more"></span>

<h1 id="Talk-Straight-直入主题"><a href="#Talk-Straight-直入主题" class="headerlink" title="Talk Straight 直入主题"></a>Talk Straight 直入主题</h1><p>不找借口，坦率回答是或不是。讲话不要拐弯抹角。由对方进行追问，然后再做出解释。</p>
<h1 id="用数据、事实说话"><a href="#用数据、事实说话" class="headerlink" title="用数据、事实说话"></a>用数据、事实说话</h1><p>将一些凭感觉想到的问题落实在 “数据” 上，变成清晰明确的 “证据”，更容易让人理解和信服。</p>
<p>毫无经验的新人，在职场的武器是数据，独一无二的、自己独立统计的数据才是有用的数据。</p>
<h1 id="用数据、逻辑说话"><a href="#用数据、逻辑说话" class="headerlink" title="用数据、逻辑说话"></a>用数据、逻辑说话</h1><p>能够流利地说英语本身没有价值，有逻辑和数据就能沟通。</p>
<p>与个人背景完全不相同的人共事，不用勉强适应不同之处，要用大家都理解的语言，即逻辑和数据去沟通。</p>
<h1 id="逻辑先行"><a href="#逻辑先行" class="headerlink" title="逻辑先行"></a>逻辑先行</h1><p>职场新手不要考虑做诉诸感情的方案，如果说话没有逻辑，连站在起跑线上的资格也没有。</p>
<h1 id="让对方听得懂"><a href="#让对方听得懂" class="headerlink" title="让对方听得懂"></a>让对方听得懂</h1><p>以对方 “毫不知情” 为前提构建逻辑、组织语言。向没有背景知识的人说明，试着让他们理解。</p>
<p>自以为是并没有益处。即便对自己来说是常识，也要以对方完全没有相关知识为前提，从零开始讲起。</p>
<p>要边说边揣摩对方的理解程度，听众不提出问题不代表完全理解，而是预示着不理解。很多情况下，听众跟不上讲话者的思路，甚至不知道自己不理解的是什么。</p>
<h1 id="配合对方的步调"><a href="#配合对方的步调" class="headerlink" title="配合对方的步调"></a>配合对方的步调</h1><p>终极信息传递方法：完全按照对方步调来，研究并效仿对方的用词、思维方式和表达习惯，按对方的惯用格式编写文件。</p>
<h1 id="充分理解对方期望值"><a href="#充分理解对方期望值" class="headerlink" title="充分理解对方期望值"></a>充分理解对方期望值</h1><p>首先要正确理解对方真正想看到什么，并经常给出超越对方预期值的结果。</p>
<p>有时需要降低对方期望度，即期望值管理。</p>
]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>communicate</tag>
      </tags>
  </entry>
  <entry>
    <title>FreeRTOS学习笔记</title>
    <url>/2022/05/16/title-1/</url>
    <content><![CDATA[<h1 id="FreeRTOS简介"><a href="#FreeRTOS简介" class="headerlink" title="FreeRTOS简介"></a>FreeRTOS简介</h1><h3 id="1-什么是FreeRTOS"><a href="#1-什么是FreeRTOS" class="headerlink" title="1.什么是FreeRTOS"></a>1.什么是FreeRTOS</h3><blockquote>
<p><strong>FreeRTOS</strong>是一个迷你的实时操作系统内核。作为一个轻量级的操作系统.可基本满足较小系统的需要。任务调度机制是嵌入式实时操作系统的一个重要概念，也是其核心技术。对于可剥夺型内核，优先级高的任务一旦就绪就能剥夺优先级较低任务的CPU使用权，提高了系统的实时响应能力。不同于<strong>μC/OS-II</strong>，FreeRTOS对系统任务的数量没有限制，既支持优先级调度算法也支持轮换调度算法，因此FreeRTOS采用双向链表而不是采用查任务就绪表的方法来进行任务调度。</p>
</blockquote>
<ol>
<li>Free 即免费的，RTOS 全称是 <strong>Real Time Operating System</strong>，中文就是实时操作系统。注意，RTOS 不是指某一个确定的系统，而是指一类系统。比如 uC/OS，FreeRTOS，RTX，RT-Thread 等这些都是 RTOS 类操作系统。<span id="more"></span></li>
<li>操作系统允许多个任务同时运行，这个叫做多任务。实际上，一个处理器核心在某一时刻只能运行一个任务。操作系统中任务调度器的责任就是决定在某一时刻究竟运行哪个任务。任务调度在各个任务之间的切换非常快，就给人们造成了同一时刻有多个任务同时运行的错觉。</li>
<li>某些操作系统给每个任务分配同样的运行时间，时间到了就轮到下一个任务，比如Unix 操作系统。 FreeRTOS 操作系统则是由用户给每个任务分配一个任务优先级，任务调度器就可以根据此优先级来决定下一刻应该运行哪个任务。</li>
<li>FreeRTOS 是 RTOS 系统的一种，FreeRTOS 十分的小巧，可以在资源有限的微控制器中运行，当然，FreeRTOS 不仅局限于在微控制器中使用。但从文件数量上来看 FreeRTOS 要比uC/OSII 和 uC/OSIII 小的多。</li>
<li>功能包括：<br>-任务管理<br>-时间管理<br>-信号量<br>-消息队列<br>-内存管理<br>-记录功能<br>-软件定时器<br>-协程</li>
</ol>
<h2 id="2-为什么选择-FreeRTOS"><a href="#2-为什么选择-FreeRTOS" class="headerlink" title="2.为什么选择 FreeRTOS"></a>2.为什么选择 FreeRTOS</h2><ul>
<li><p> RTOS 类系统有很多，比如 uC/OS，资料很多，尤其是中文资料，那为什么要选择 FreeRTOS 呢？</p>
</li>
<li><p> FreeRTOS是免费的，学习RTOS操作系统的话 uC/OS是首选，但要做产品的话，免费的FreeRTOS操作系统就是个不错的选择。</p>
</li>
<li><p>许多半导体厂商产品的 SDK(Software Development Kit—软件开发工具包) 包就使用 FreeRTOS 作为其操作系统，尤其是 WIFI、蓝牙这些带协议栈的芯片或模块。</p>
</li>
<li><p>简单，因为FreeRTOS 的文件数量很少。</p>
</li>
</ul>
<h1 id="3-FreeRTOS-特点"><a href="#3-FreeRTOS-特点" class="headerlink" title="3.FreeRTOS 特点"></a>3.FreeRTOS 特点</h1><p>FreeRTOS 是一个可裁剪的小型 RTOS 系统，其特点包括：<br>FreeRTOS 的内核支持抢占式，合作式和时间片调度。</p>
<ul>
<li>提供了一个用于低功耗的 Tickless 模式。</li>
<li>系统的组件在创建时可以选择动态或者静态的 RAM，比如任务、消息队列、信号量、软件定时器等等。</li>
<li>FreeRTOS-MPU 支持 Corex-M 系列中的 MPU 单元，如 STM32F429。</li>
<li>FreeRTOS 系统简单、小巧、易用，通常情况下内核占用 4k-9k 字节的空间。</li>
<li>高可移植性，代码主要 C 语言编写。</li>
<li>高效的软件定时器。</li>
<li>强大的跟踪执行功能。</li>
<li>堆栈溢出检测功能。</li>
<li>任务数量不限。</li>
<li>任务优先级不限。</li>
</ul>
<h1 id="4-FreeRTOS资料库"><a href="#4-FreeRTOS资料库" class="headerlink" title="4.FreeRTOS资料库"></a>4.FreeRTOS资料库</h1><ol>
<li><a href="https://www.freertos.org/">FreeRTOS的官网</a></li>
<li>系统定义的链表和链表节点数据结构如下所示：<pre><code> //定义链表结构
 typedef struct xLIST&#123;
   unsigned portSHORPT usNumberOfItems;    //usNumberOfItems为链表的长度，为0表示链表为空
   volatile xListItem *pxHead;    //pxHead为链表的头指针
   volatile xListItem *pxIndex;    //pxIndex指向链表当前结点的指针
   volatile xListItem xListEnd;    //xListEnd为链表尾结点
 &#125;xList;

 //定义链表结点的结构
 struct xLIST_ITEM&#123;
 port Tick type;    //port Type为时针节拍数据类型
 xItem Value;    //xItem Value的值用于实现时间管理，可根据需要选择为16位或32位
 volatile struct xLIST_ITEM *pxNext;    //指向链表的前一个结点
 void *pvOwner;    //指向此链表结点所在的任务控制块
 void *pvContainer;    //指向此链表结点所在的链表
 &#125;；
</code></pre>
</li>
</ol>
<h1 id="5-常见问题"><a href="#5-常见问题" class="headerlink" title="5.常见问题"></a>5.常见问题</h1><blockquote>
<p>每当任务、队列和信号量创建的时候，FreeRTOS要求分配一定的RAM。虽然采用malloc()和free()函数可以实现申请和释放内存的功能，但这两个函数存在以下缺点：并不是在所有的嵌入式系统中都可用，要占用不定的程序空间，可重入性欠缺以及执行时间具有不可确定性。为此，除了可采用malloc()和free()函数外，FreeRTOS还提供了另外两种内存分配的策略，用户可以根据实际需要选择不同的内存分配策略。<br>解决方法有：</p>
</blockquote>
<ol>
<li>按照需求内存的大小简单地把一大块内存分割为若干小块，每个小块的大小对应于所需求内存的大小。这样做的好处是比较简单，执行时间可严格确定，适用于任务和队列全部创建完毕后再进行内核调度的系统；这样做的缺点是，由于内存不能有效释放，系统运行时应用程序并不能实现删除任务或队列。</li>
<li>采用链表分配内存，可实现动态的创建、删除任务或队列。系统根据空闲内存块的大小按从小到大的顺序组织空闲内存链表。当应用程序申请一块内存时，系统根据申请内存的大小按顺序搜索空闲内存链表，找到满足申请内存要求的最小空闲内存块。为了提高内存的使用效率，在空闲内存块比申请内存大的情况下，系统会把此空闲内存块一分为二。一块用于满足申请内存的要求，一块作为新的空闲内存块插入到链表中。<br>FreeRTOS中每个任务对应于一个任务控制块（TCB），其定义如下所示：<pre><code> typedef struct tasTaskContralBlock&#123;
 portSTACK_TYPE *pxTopOfStack;    //指向任务堆栈结束处
 portSTACK_TYPE *pxStack;    //指向任务堆栈起始处
 unsigned portSHORT usStackDepth;    //定义堆栈深度
 signed portCHAR pcTaskName[tskMAX_TASK_NAME_LEN];    //任务名称
 unsigned portCHAR ucPriority;    //任务优先级
 xListItem xGenericListItem;    //用于把TCB插入就绪表或等待链表
 xListItem xEventListItem;    //用于把TCB插入事件链表（如消息队列）
 unsigned portCHAR ucTCBNumber;    //用于记录功能
 &#125;tskTCB;
</code></pre>
</li>
</ol>
<p>作为一个轻量级的操作系统，FreeRTOS提供的功能包括：任务管理、时间管理、信号量、消息队列、内存管理、记录功能等，可基本满足较小系统的需要。FreeRTOS内核支持优先级调度算法，每个任务可根据重要程度的不同被赋予一定的优先级，CPU总是让处于就绪态的、优先级最高的任务先运行。FreeRTOS内核同时支持轮换调度算法，系统允许不同的任务使用相同的优先级，在没有更高优先级任务就绪的情况下，同一优先级的任务共享CPU的使用时间。FreeRTOS的内核可根据用户需要设置为可剥夺型内核或不可剥夺型内核。当FreeRTOS被设置为可剥夺型内核时，处于就绪态的高优先级任务能剥夺低优先级任务的CPU使用权，这样可保证系统满足实时性的要求；当FreeRTOS被设置为不可剥夺型内核时，处于就绪态的高优先级任务只有等当前运行任务主动释放CPU的使用权后才能获得运行，这样可提高CPU的运行效率。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>嵌入式系统</tag>
      </tags>
  </entry>
  <entry>
    <title>CAN总线通信</title>
    <url>/2022/05/16/title-2/</url>
    <content><![CDATA[<h1 id="CAN通信"><a href="#CAN通信" class="headerlink" title="CAN通信"></a>CAN通信</h1><h2 id="现场总线简介："><a href="#现场总线简介：" class="headerlink" title="现场总线简介："></a>现场总线简介：</h2><ol>
<li>什么是现场总线（Field Bus）：<br>现场总线系统也叫现场总线控制系统，现场总线控制系统是全数字串行、双向通信系统。系统内测量和控制设备如探头、激励器和控制器可互相连接、监测和控制。<span id="more"></span></li>
<li>现场总线的特点：<br>系统的开放性。传统的控制系统是个自我封闭的系统，一般只能通过工作站的串口或并口对外通信。在现场总线技术中用户可按自己的需要和对象，将来自不同供应商的产品组成大小随意的系统。可操作性与可靠性。现场总线在选用相同的通信协议情况下，只要选择合适的总线网卡、插口与适配器即可实现互连设备间、系统间的信息传输与沟通，大大减少接线与查线的工作量，有效提高控制的可靠性。现场设备的智能化与功能自治性。传统数控机床的信号传递是模拟信号的单向传递，信号在传递过程中产生的误差较大，系统难以迅速判断故障而带故障运行。而现场总线中采用双向数字通信，将传感测量、补偿计算以及工程量处理与控制等功能分散到现场设备中完成，可随时诊断设备的运行状态。对现场环境的适应性。现场总线是作为适应现场环境工作而设计的，可支持双绞线、同轴电缆、光缆、射频、红外线及电力线等，其具有较强的抗干扰能力，能采用两线制实现送电与通信并可满足安全及防爆要求等。</li>
<li>现场总线系统的组成：<br>现场总线控制系统：它的软件是系统的重要组成部分，在网络运行过程中对系统实时采集数据、进行数据处理、计算。优化控制及逻辑控制报警、监视、显示和报表等。现场总线的测量系统：其特点为多变量高性能的测量，使测量仪表具有计算能力等更多功能，由于采用数字信号所以具有高分辨率，准确性高、抗干扰、抗畸变能力强等特点。设备管理系统：可以提供设备自身及过程的诊断信息、管理信息、设备运行状态信息(包括智能仪表)、厂商提供的设备制造信息。总线系统计算机服务模式：以客户机/服务器模式是较为流行的网络计算机服务模式。服务器表示数据源(提供者)，应用客户机则表示数据使用者，它从数据源获取数据并进一步进行处理。数据库：它能有组织的、动态的存储大量有关数据与应用程序，实现数据的充分共享、交叉访问，具有高度独立性。</li>
<li>现场总线技术的主要模型及选择CAN总线的原因：<br>CAN总线、LONWORKS总线、PROFIBUS总线、FF总线。本文主要讲解的是CAN总线。CAN是控制器局域网络(Controller Area Network, CAN)的简称，它是一种能够实现多重分布式实时控制的串行通信网络。CAN不仅仅是一种通信网络它在某种意义上也是一种协议。它的特点如下：传输的速度最高可达1Mbps，通信距离最远可达到10km，无损位仲裁机制（无损位仲裁机制是指在信号正常的网络上高负载率发送测试时，总线遇上许多意想不到的问题，这个时候可能就发生了所谓的仲裁机制，系统中很多个设备或者模块可能同时申请对总线的使用权，为避免产生总线冲突，需由总线仲裁合理控制和管理系统中需要占用总线的申请者，在许多申请者同时提出总线请求时，仲裁机制会以一定的优先算法得出那个申请者能获得总线的使用权，只有获得了总线控制权的设备，才能开始传输数据。），多主位机结构。近年来，CAN控制器的价格越来越低，这也使CAN总线从众多现场总线中成功脱颖而出。低成本：ECUs可通过单个的CAN接口实现通信，成本会大大减少。高集成：CAN总线系统允许在所有ECUs上进行参数调配或者集中错误诊断。可靠性：CAN总线的系统对子系统的故障方面的问题有很好的解决方式，是汽车控制系统比较理想的选择。高效率：可以通过设置id来对消息进行优先级排序，进而实现最高优先级的程序不会被中断。灵活性：每一个ECU包含一个用于CAN总线接收和发出的芯片，故可以随意添加CAN总线节点。</li>
<li>CAN现场总线技术国内外的发展及现状</li>
<li>国内发展现状<br>目前，现场总线技术在我国的发展状态还仅仅只是停留在发展的阶段。我国在CAN总线应用方面与国外存在显著差距：我国虽然已经十分重视CAN总线的研究已经将CAN总线应用于各个不同领域，但是依然处于起步甚至实验阶段。例如在汽车电子CAN网络研究方面还处于实验状态，在起步状态止步不前。而在国外的汽车电子研究领域中，CAN总线汽车网络控制系统早已初步运用且处于日益发展的状态，国内大部分的汽车生产商还未将CAN总线应用于汽车总线设计之中。在相关技术方面，CAN总线的汽车总线设计方面的核心技术基本掌握在外方手中，我国只是处于对CAN总线技术的一个初步认知起步状态，为顺应当今社会汽车设计发展的趋势，我国也提出了对CAN总线技术领域相应的加强研究计划，也开发了许多具有自主知识产权专利的CAN总线设计相关产品。但是仅仅是这些。相比于国外的CAN总线设计方面的研究还是远远不够的。</li>
<li>国外发展现状<br>自Bosch与intel公司与1986年发布的CAN-bus通信方式，宝马公司便很快的于1989年推出第一款使用CAN-bus通信的汽车，进而CAN-bus通信很快的在国外迅速发展了起来，现如今国外的每一辆汽车几乎均装配有CAN-bus 网络。在1993年，CAN-bus总线被定成为国际标准ISO11898（高速应用）和ISO11519(低速应用）；于1994年，欧洲成立了cia厂商协会，美洲成立了ODVA厂商协会，专门支持CAN-bus总线的两大应用协议:CANopen协议于DeviceNet协议，cia公司已经成为全球应用CAN技术的权威。对比可知，我国在CAN总线方面的研究与国外相比还是存在着远远的不足。</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>CAN</tag>
      </tags>
  </entry>
  <entry>
    <title>1：59</title>
    <url>/2022/05/16/title-3/</url>
    <content><![CDATA[<h1 id="一些好句"><a href="#一些好句" class="headerlink" title="一些好句"></a>一些好句</h1><ul>
<li><strong>一斗米养恩，一石米养仇</strong></li>
<li><strong>因为我自爱 所以遇见了美好的你 也因为你爱我 我才能遇见更好的自己</strong></li>
<li><strong>福兮祸之所福 祸兮福之所祸</strong><h1 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h1>运动较少，食量增多，食欲下降= =，吃什么都感觉不好吃但就是想吃。作息比较混乱，从明天开始好好调整作息吧！</li>
</ul>
<p><em><strong>好想 好想吃火锅！！！</strong></em><br>王者里碰到的贵物能不能都去死啊我超<br>不生气不生气气出病来无人替！</p>
]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>闲聊</tag>
      </tags>
  </entry>
</search>
